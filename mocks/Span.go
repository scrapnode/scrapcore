// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	attributes "github.com/scrapnode/scrapcore/xmonitor/attributes"
	mock "github.com/stretchr/testify/mock"
)

// Span is an autogenerated mock type for the Span type
type Span struct {
	mock.Mock
}

// End provides a mock function with given fields:
func (_m *Span) End() {
	_m.Called()
}

// KO provides a mock function with given fields: desc
func (_m *Span) KO(desc string) {
	_m.Called(desc)
}

// OK provides a mock function with given fields: desc
func (_m *Span) OK(desc string) {
	_m.Called(desc)
}

// SetAttributes provides a mock function with given fields: _a0
func (_m *Span) SetAttributes(_a0 attributes.Attributes) {
	_m.Called(_a0)
}

type mockConstructorTestingTNewSpan interface {
	mock.TestingT
	Cleanup(func())
}

// NewSpan creates a new instance of Span. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSpan(t mockConstructorTestingTNewSpan) *Span {
	mock := &Span{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
