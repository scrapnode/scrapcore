// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	xsender "github.com/scrapnode/scrapcore/xsender"
	mock "github.com/stretchr/testify/mock"
)

// Send is an autogenerated mock type for the Send type
type Send struct {
	mock.Mock
}

// Execute provides a mock function with given fields: req
func (_m *Send) Execute(req *xsender.Request) (*xsender.Response, error) {
	ret := _m.Called(req)

	var r0 *xsender.Response
	var r1 error
	if rf, ok := ret.Get(0).(func(*xsender.Request) (*xsender.Response, error)); ok {
		return rf(req)
	}
	if rf, ok := ret.Get(0).(func(*xsender.Request) *xsender.Response); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*xsender.Response)
		}
	}

	if rf, ok := ret.Get(1).(func(*xsender.Request) error); ok {
		r1 = rf(req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSend interface {
	mock.TestingT
	Cleanup(func())
}

// NewSend creates a new instance of Send. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSend(t mockConstructorTestingTNewSend) *Send {
	mock := &Send{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
